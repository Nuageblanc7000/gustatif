# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
#pour la gestion de la langue
    app.locales: [fr, en, nl]

    resto_images: '%kernel.project_dir%/public/images/restaurant'
    resto_mini_images: '%kernel.project_dir%/public/media/cache/miniature/images/restaurant'
    resto_bg_images: '%kernel.project_dir%/public/media/cache/bg_r/images/restaurant'
    
    resto_plats: '%kernel.project_dir%/public/images/plats'
    resto_bg_plats: '%kernel.project_dir%/public/media/cache/bg_r/images/restaurant'
    resto_mini_plats: '%kernel.project_dir%/public/media/cache/miniature/images/plats'

    avatar_user: '%kernel.project_dir%/public/images/avatar'
    avatar_user_mini: '%kernel.project_dir%/public/media/cache/avatar_mini/images/avatar'
    avatar_user_bg: '%kernel.project_dir%/public/media/cache/avatar_bg/images/avatar'
#pour mes fixtures----------------
    json_path_fixtures: '%kernel.project_dir%/src/DataFixtures/city-json.json'
    namejson_path_fixtures: '%kernel.project_dir%/src/DataFixtures/resto-name.json'
    faker_plats: '%kernel.project_dir%/src/DataFixtures/fakerPlats'
    faker_resto: '%kernel.project_dir%/src/DataFixtures/fakerResto'
    faker_avatars: '%kernel.project_dir%/src/DataFixtures/avatarsFixtures'
services:
    App\Service\FileUploader:
    App\Service\DeleteImageService:
    App\Service\DeleteImagesEntityService:
    App\Service\MailService: ~
    App\Service\StatService:
    # App\Service\ObserverCategory:
    #     calls:
    #         - 'getObserver': ['@categoryRepository']
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    App\Event\AddScheduleEventListenner:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\Restaurant'}


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
